<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>windsky’s blog</title>
  
  <subtitle>热爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://0xwindsky.github.io/"/>
  <updated>2020-07-28T05:16:37.089Z</updated>
  <id>https://0xwindsky.github.io/</id>
  
  <author>
    <name>windsky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>buuctf-misc（四）</title>
    <link href="https://0xwindsky.github.io/2020/07/28/buumisc4/"/>
    <id>https://0xwindsky.github.io/2020/07/28/buumisc4/</id>
    <published>2020-07-28T05:00:00.000Z</published>
    <updated>2020-07-28T05:16:37.089Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-CTF2019-otaku"><a href="#1-CTF2019-otaku" class="headerlink" title="1.[*CTF2019]otaku"></a>1.[*CTF2019]otaku</h1><p>原题hint:The txt is GBK encoding.<br>伪加密09改成00，打开doc文档,将一段话复制到txt中，用GBK格式保存  </p><p>Hello everyone, I am Gilbert. Everyone thought that I was killed, but actually I survived. Now that I have no cash with me and I’m trapped in another country. I cant contact Violet now. She must be desperate to see me and I dont want her to cry for me. I need to pay 300 for the train, and 88 for the meal. Cash or battlenet point are both accepted. I dont play the Hearthstone, and I dont even know what is Rastakhans Rumble.<br>打开加密的压缩包，注释处有提示<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/1.png" alt="图片"><br>根据提示下载winrar，并加密上面保存好的txt文档，进行明文攻击，得到密码为My_waifu，将图片放入StegSolve中，lsb隐写出现flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/2.png" alt="图片">  </p><h1 id="2-SUCTF2018-followme"><a href="#2-SUCTF2018-followme" class="headerlink" title="2.[SUCTF2018]followme"></a>2.[SUCTF2018]followme</h1><p>放入wireshark中，导出http,应该是找password的题<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/3.png" alt="图片">  </p><h1 id="3-GUET-CTF2019-520的暗示"><a href="#3-GUET-CTF2019-520的暗示" class="headerlink" title="3.[GUET-CTF2019]520的暗示"></a>3.[GUET-CTF2019]520的暗示</h1><p>打开是一个photo.dat文件，文件与0x33异或，得到一张图片<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/4.png" alt="图片"><br>基站定位，桂林电子科技大学花江校区，即是flag  </p><h1 id="4-ACTF新生赛2020-剑龙"><a href="#4-ACTF新生赛2020-剑龙" class="headerlink" title="4.[ACTF新生赛2020]剑龙"></a>4.[ACTF新生赛2020]剑龙</h1><p>剑龙=Stegosaurus，即stegosaurus隐写，没有文件名的文件在linux下查看是pyc文件<br>(python3.6以上的版本过高会报错)  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 stegosaurus.py -x O_O.pyc</span><br></pre></td></tr></table></figure><p>得到flag：<code>flag{3teg0Sauru3_!1}</code></p><h1 id="5-XMAN2018排位赛-file"><a href="#5-XMAN2018排位赛-file" class="headerlink" title="5.[XMAN2018排位赛]file"></a>5.[XMAN2018排位赛]file</h1><p>尝试用extundelete恢复所有目录和文件:<code>extundelete –restore-all</code>,查看其恢复的文件，发现flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/5.png" alt="图片"><br>(用winhex打开，搜索f l a g也可以搜到)<del>应该算非预期吧</del><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/6.png" alt="图片">  </p><h1 id="6-湖南省赛2019-Findme"><a href="#6-湖南省赛2019-Findme" class="headerlink" title="6.[湖南省赛2019]Findme"></a>6.[湖南省赛2019]Findme</h1><p>看着像套娃<br>1.png：<br>猜测是高和宽有问题，在网上找一个crc爆破宽高的脚本，得到新的图片，但新的图片显示仍有问题，将图片用放入010editor查看<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/7.png" alt="图片"><br>图片的第二块和第三块缺少IDAT标识，将49444154写入union CTYPE type对应的位置<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/8.png" alt="图片"><br>将1.png放入stegsolve发现在blue plane 2处有一个为二维码<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/9.png" alt="图片"><br>扫码得到第一个线索：ZmxhZ3s0X3  </p><p>2.png:<br>放入winhex发现图片后有7z标识。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/10.png" alt="图片"><br>将其粘贴到新文件，以7z为后缀去保存，打不开该文件，看了一下文件头为377A0304，不是7z的文件头，但和zip类似（zip的文件头为504B0304）于是将所有377A0304改为504B0304，可以正常打开但会报错，用WinRAR自带的修复压缩包，打开发现文档几乎都是N0thIng h3re，然后再kali里面<br><code>strings * | grep -v &#39;N0thIng h3re&#39;</code><br>即打印出除了N0thIng h3re以外的字符串<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/11.png" alt="图片"><br>得到第二个线索：1RVcmVfc  </p><p>3.png:<br>和第一个图片一样：CRC error，打开发现crc都是两位的，分别是33，52，6c，5a，33，30，3d。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/12.png" alt="图片"><br>连起来再转ascii码得到第三个线索：3RlZ30=  </p><p>4.png,5.png:<br>放入kali直接<code>strings 4.png</code>,<code>strings 5.png</code>。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/13.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/14.png" alt="图片"><br>得到第四条和第五条线索：cExlX1BsY=，Yzcllfc0lN。  </p><p>将这五条线索重组一下b64解码得到flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/15.png" alt="图片">  </p><h1 id="7-UTCTF2020-basic-forensics"><a href="#7-UTCTF2020-basic-forensics" class="headerlink" title="7.[UTCTF2020]basic-forensics"></a>7.[UTCTF2020]basic-forensics</h1><p>扔kali里面直接搜索字符串<br><code>strings attachment.jpeg | grep flag</code><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/16.png" alt="图片"><br>出现flag。</p><h1 id="8-UTCTF2020-zero"><a href="#8-UTCTF2020-zero" class="headerlink" title="8.[UTCTF2020]zero"></a>8.[UTCTF2020]zero</h1><p>打开是很多英文，题目带zero，猜测是零宽度字符的Unicode隐写术<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/17.png" alt="图片"><br>解出flag。</p><h1 id="9-UTCTF2020-sstv"><a href="#9-UTCTF2020-sstv" class="headerlink" title="9.[UTCTF2020]sstv"></a>9.[UTCTF2020]sstv</h1><p><code>apt-get install qsstv</code><br>(推荐)用QSSTV(kali)这个软件，MMSSTV也可以，可以将音频转换为图片，记得要修改sound的配置<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/18.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/19.png" alt="图片">  </p><h1 id="10-ACTF新生赛2020-music"><a href="#10-ACTF新生赛2020-music" class="headerlink" title="10.[ACTF新生赛2020]music"></a>10.[ACTF新生赛2020]music</h1><p>给了一个文件vip.m4a,放在010中发现本应该是00的位置却有大量A1出现，于是将其和A1异或。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc4/20.png" alt="图片"><br>保存时修改后缀为MP4,播放出现flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/categories/buu/"/>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/tags/buu/"/>
    
      <category term="misc" scheme="https://0xwindsky.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>buuctf-misc（三）</title>
    <link href="https://0xwindsky.github.io/2020/05/30/buumisc3/"/>
    <id>https://0xwindsky.github.io/2020/05/30/buumisc3/</id>
    <published>2020-05-30T14:12:00.000Z</published>
    <updated>2020-06-04T08:40:37.722Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-Business-Planning-Group"><a href="#1-Business-Planning-Group" class="headerlink" title="1.Business Planning Group"></a>1.Business Planning Group</h1><p>题中给了一个图片，题目B P G，猜测bpg图片，用winhex打开在下面找到bpg图片<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/1.png" alt="图片"><br>在网上搜了一下，这种bpg图片可以用Honeyview打开<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/2.png" alt="图片"><br>bases64解密，出现flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/3.png" alt="图片">  </p><h1 id="2-BSidesSF2019-zippy"><a href="#2-BSidesSF2019-zippy" class="headerlink" title="2.[BSidesSF2019]zippy"></a>2.[BSidesSF2019]zippy</h1><p>放在kali中发现数据包中有zip<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/4.png" alt="图片"><br>导出来，发现有密码，将流量包放在wireshark下，追踪tcp流发现解压密码。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/5.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/6.png" alt="图片"><br>打开解压好的txt文档，即出现flag  </p><h1 id="3-ACTF新生赛2020-明文攻击"><a href="#3-ACTF新生赛2020-明文攻击" class="headerlink" title="3.[ACTF新生赛2020]明文攻击"></a>3.[ACTF新生赛2020]明文攻击</h1><p>将图片放在winhex下，发现最下面有个压缩包，文件头缺失，补全并添加至新文件<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/7.png" alt="图片"><br>发现题给的压缩包里面有一个flag.txt，和刚解压出的txt大小相同，明文攻击<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/8.png" alt="图片"><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/9.png" alt="图片"><br>点击确定保存为zip文件，解压出现flag</p><h1 id="4-我爱Linux"><a href="#4-我爱Linux" class="headerlink" title="4.我爱Linux"></a>4.我爱Linux</h1><p>打开是一张图片，放在winhex下，翻到后面的数据很奇怪，但是没见过，搜了一下发现是python序列化，导出FF D9 80 03后面的数据至新文件<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/10.png" alt="图片"><br>写个脚本读取这个文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import pickle</span><br><span class="line">with open(&#39;flag.pickle&#39;, &#39;rb&#39;) as f:</span><br><span class="line">    f&#x3D; pickle.load(f)</span><br><span class="line">data &#x3D; list()</span><br><span class="line">for i in range(len(f)):</span><br><span class="line">    tem &#x3D; [&#39; &#39;]*100</span><br><span class="line">    data.append(tem)</span><br><span class="line">for i, j in enumerate(f):</span><br><span class="line">    for m in j:</span><br><span class="line">        data[i][m[0]] &#x3D; m[1]</span><br><span class="line">for i in data:</span><br><span class="line">    print(&#39;&#39;.join(i))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/11.png" alt="图片">  </p><h1 id="5-SCTF2019-电单车"><a href="#5-SCTF2019-电单车" class="headerlink" title="5.[SCTF2019]电单车"></a>5.[SCTF2019]电单车</h1><p>将wav文件放在audacity中查看波形图<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/12.png" alt="图片"><br>将其转为0和1，细的为0宽的为1，<code>0 0111010010101010011000100 011101001010101001100010</code><br>钥匙信号(PT224X) = 同步引导码(8bit) + 地址位(20bit) + 数据位(4bit) + 停止码(1bit)<br>地址位长度为20bit，后4位为数据位即<code>01110100101010100110</code>  </p><h1 id="6-WUSTCTF2020-spaceclub"><a href="#6-WUSTCTF2020-spaceclub" class="headerlink" title="6.[WUSTCTF2020]spaceclub"></a>6.[WUSTCTF2020]spaceclub</h1><p>打开txt文档发现是空白的，全选发现都是空格，长为1短为0<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/13.png" alt="图片"><br>将二进制转字符串：wctf2020{h3re_1s_y0ur_fl@g_s1x_s1x_s1x}</p><h1 id="7-GUET-CTF2019-soul-sipse"><a href="#7-GUET-CTF2019-soul-sipse" class="headerlink" title="7.[GUET-CTF2019]soul sipse"></a>7.[GUET-CTF2019]soul sipse</h1><p>放在audacity中，查看频谱图，采样率在22050以下，会出现一串文字：这两个数的和是多少？<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/14.png" alt="图片"><br>用steghide找出隐藏的文件，是个链接<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/15.png" alt="图片"><br>下载链接的图片，打不开，放在winhex下，发现文件头损坏，将其修复并打开，发现是Unicode编码，解码得到两个数字，相加即flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/16.png" alt="图片">  </p><h1 id="8-voip"><a href="#8-voip" class="headerlink" title="8.voip"></a>8.voip</h1><p>谷歌一下，voip：互联网协议语音（VoIP），也称为IP电话，简称电话。<br>将其放在wireshark中，选择电话，voip呼叫。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/17.png" alt="图片"><br>点击播放流并播放即有声音读出flag：seccon{9001IVR}<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/18.png" alt="图片">  </p><h1 id="9-WUSTCTF2020-alison-likes-jojo"><a href="#9-WUSTCTF2020-alison-likes-jojo" class="headerlink" title="9.[WUSTCTF2020]alison_likes_jojo"></a>9.[WUSTCTF2020]alison_likes_jojo</h1><p>将boki.jpg放入kali下，foremost分离出一个压缩包，打开发现加密了，暴力破解<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/19.png" alt="图片"><br>打开txt，里面是base64，解了几遍最后出现<code>killerqueen</code>放在kali下outguess解出<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/20.png" alt="图片"><br>打开生成的1.txt出现flag</p><h1 id="10-QCTF2018-X-man-A-face"><a href="#10-QCTF2018-X-man-A-face" class="headerlink" title="10.[QCTF2018]X-man-A face"></a>10.[QCTF2018]X-man-A face</h1><p>二维码用ps补齐<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc3/21.png" alt="图片"><br>扫码得到<code>KFBVIRT3KBZGK5DUPFPVG2LTORSXEX2XNBXV6QTVPFZV6TLFL5GG6YTTORSXE7I=</code><br>用base32解码出flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/categories/buu/"/>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/tags/buu/"/>
    
      <category term="misc" scheme="https://0xwindsky.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>buuctf-misc（二）</title>
    <link href="https://0xwindsky.github.io/2020/05/19/buumisc2/"/>
    <id>https://0xwindsky.github.io/2020/05/19/buumisc2/</id>
    <published>2020-05-19T05:00:00.000Z</published>
    <updated>2020-05-21T10:35:14.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-SUCTF2018-single-dog"><a href="#1-SUCTF2018-single-dog" class="headerlink" title="1.[SUCTF2018]single dog"></a>1.[SUCTF2018]single dog</h1><p>给了一张图片，用foremost分离出一个txt文件<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/1.png" alt="图片"><br>打开是aaencode,放在控制台里跑出来是：<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/2.png" alt="图片"><br>于是找一个在线网站解密。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/3.png" alt="图片">  </p><h1 id="2-WUSTCTF2020-find-me"><a href="#2-WUSTCTF2020-find-me" class="headerlink" title="2.[WUSTCTF2020]find_me"></a>2.[WUSTCTF2020]find_me</h1><p>find_me先去图片属性的详细信息看了一下，发现是盲文<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/4.png" alt="图片"><br>找个网站在线解密,推荐千千秀字的<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen" target="_blank" rel="noopener">盲文解密</a>,得到flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/5.png" alt="图片">  </p><h1 id="3-真的很杂"><a href="#3-真的很杂" class="headerlink" title="3.真的很杂"></a>3.真的很杂</h1><p>foremost分离图片，发现是压缩包，解压缩，打开发现压缩包应该是是安卓apk。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/6.png" alt="图片"><br>将压缩包中的classes.dex放在dex2jar-2.0下<br>代码：<code>d2j-dex2jar.bat classes.dex</code><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/7.png" alt="图片"><br>会生成jar文件，再用jd-gui打开，搜索字符串即可看到flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/8.png" alt="图片"><br>flag差两个字符，题目hint:前一个是字母，后一个是数字。<br><del>这方面的爆破我不懂，然后试了试前面是c，后面是3</del>  </p><h1 id="4-hashcat"><a href="#4-hashcat" class="headerlink" title="4.hashcat"></a>4.hashcat</h1><p>What kind of document is this，将其后缀改成doc或ppt,发现需要密码。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/9.png" alt="图片"><br>用Accent OFFICE Password Recovery v5.1 CracKed By Hmily[LCG][LSG]这个软件暴力破解<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/10.png" alt="图片"><br>输入密码，word文件打不开，尝试ppt，都是空白页，搜索字符串flag，将文字颜色调成其他颜色就可以看到flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/11.png" alt="图片">  </p><h1 id="5-安洵杯-2019-easy-misc"><a href="#5-安洵杯-2019-easy-misc" class="headerlink" title="5.[安洵杯 2019]easy misc"></a>5.[安洵杯 2019]easy misc</h1><p>打开压缩包，里面有一个图片，一个文件夹，一个压缩包。<br>图片用foremost分离,发现里面有两张相同的图片，盲水印。<br>所以使用bwm的<a href="https://github.com/chishaxie/BlindWaterMark" target="_blank" rel="noopener">脚本</a>，如果没有cv库就<code>pip install opencv-python</code>,再运行脚本<code>python bwm.py decode 1.png 2.png flag.png</code>,1.png和2.png是压缩包的两张相同图片，flag.png是分离所得的水印。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/12.png" alt="图片"><br>图片提示in 11.txt就是说在11.txt中，同文件夹最下面有一个hint.txt。<br><code>hint:取前16个字符</code> 打开11.txt，应该是词频统计：etaonrhsidluygw<br>接下来看压缩包，需要密码，压缩包注释：<code>FLAG IN ((√2524921X85÷5+2)÷15-1794)+NNULLULL,</code><br>左边式子接触来是7，即密码为 7+NNULLULL, 掩码攻击<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/13.png" alt="图片"><br>爆出密码，解压缩，里面有一个decode.txt,打开并用刚才词频统计的替换。<br>替换为：<code>QW8obWdIWT9pMkFSQWtRQjVfXiE/WSFTajBtcw==</code><br>base64解码：<code>Ao(mgHY?i2ARAkQB5_^!?Y!Sj0ms</code><br>再用base85解码：<code>flag{have_a_good_day1}</code></p><h1 id="6-XMAN2018排位赛-通行证"><a href="#6-XMAN2018排位赛-通行证" class="headerlink" title="6.[XMAN2018排位赛]通行证"></a>6.[XMAN2018排位赛]通行证</h1><p>打开文档：<code>a2FuYmJyZ2doamx7emJfX19ffXZ0bGFsbg==</code><br>base64解码：<code>kanbbrgghjl{zb____}vtlaln</code><br>栅栏加密(key=7)：<code>kzna{blnl_abj_lbh_trg_vg}</code><br>凯撒偏移13位，即rot13:<code>xman{oyay_now_you_get_it}</code>  </p><h1 id="7-MRCTF2020-CyberPunk"><a href="#7-MRCTF2020-CyberPunk" class="headerlink" title="7.[MRCTF2020]CyberPunk"></a>7.[MRCTF2020]CyberPunk</h1><p>运行程序，上面显示：<code>It will on 2020.9.17</code><br>将本日期调制2020.09.17，再次运行程序，出现flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/14.png" alt="图片">  </p><h1 id="8-WUSTCTF2020-爬"><a href="#8-WUSTCTF2020-爬" class="headerlink" title="8.[WUSTCTF2020]爬"></a>8.[WUSTCTF2020]爬</h1><p>解压一个文件名为爬，没有后缀，放在winhex下，显示为pdf文件。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/15.png" alt="图片"><br>打开上面有一句话flag被图片盖住了，意思是挪开图片就能看到，然后(我的电脑没有软件可以修改)，手机的WPS被迫营业。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/16.png" alt="图片"><br>图片放大后：<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/17.png" alt="图片"><br>将图片上的16进制转字符串得到flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/18.png" alt="图片">  </p><h1 id="9-WUSTCTF2020-girlfriend"><a href="#9-WUSTCTF2020-girlfriend" class="headerlink" title="9.[WUSTCTF2020]girlfriend"></a>9.[WUSTCTF2020]girlfriend</h1><p>解压缩，发现girlfriend.wav文件，听一下是拨电话的声音，突然想起来有个工具：dtmf2num。<br>将wav文件放在dtmf2num文件夹下，打开命令行输入<code>dtmf2num.exe -w girlfriend.wav</code><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/19.png" alt="图片"><br>解出来：<code>999*666*88*2*777*33*6*999*4*444*777*555*333*777*444*33*66*3*7777</code><br>手机密码9键：<code>youaremygirlfriends</code>(999就是第九键的第三个字母，即y)  </p><h1 id="10-MRCTF2020-不眠之夜"><a href="#10-MRCTF2020-不眠之夜" class="headerlink" title="10.[MRCTF2020]不眠之夜"></a>10.[MRCTF2020]不眠之夜</h1><p>打开发现一堆图片，常规操作开始拼图，但是太麻烦，网上搜了一下，发现有两个工具很适合，montage与gaps。<br>linux下montage的用法:<code>montage *.png -tile 图片摆放格式 -geometry 图片分辨率 flag.png</code><br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/20.png" alt="图片"><br>python gaps用法:<code>gaps --image=flag.jpg --generations=40 --population=120 --size=100</code>  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">image        Path to puzzle</span><br><span class="line">size        Puzzle piece size in pixels</span><br><span class="line">generationsNumber of generations for genetic algorithm</span><br><span class="line">populationNumber of individuals in population</span><br></pre></td></tr></table></figure><p>出现flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc2/21.png" alt="图片">  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/categories/buu/"/>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/tags/buu/"/>
    
      <category term="misc" scheme="https://0xwindsky.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>buuctf-misc（一）</title>
    <link href="https://0xwindsky.github.io/2020/05/18/buumisc1/"/>
    <id>https://0xwindsky.github.io/2020/05/18/buumisc1/</id>
    <published>2020-05-18T02:30:00.000Z</published>
    <updated>2020-05-19T04:06:18.955Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-面具下的flag"><a href="#1-面具下的flag" class="headerlink" title="1.面具下的flag"></a>1.面具下的flag</h1><p>打开压缩包是一张图片，放在winhex下有pk字样，即zip压缩包。<br>修改后缀发现里面的flag.vmdk文件被加密，猜测伪加密，将504B0102后面的09改成00。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/1.png" alt="图片"><br>将vmdk文件放入winhex中，双击打开分区1，可以看到两个txt文件。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/2.png" alt="图片"><br> 分别打开发现一个是Ook,一个是brainfuck，在这个网站解密 <a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a> ，拼在一起即可获得flag。  </p><h1 id="2-HBNIS2018-低个头"><a href="#2-HBNIS2018-低个头" class="headerlink" title="2.[HBNIS2018]低个头"></a>2.[HBNIS2018]低个头</h1><p>题目为低个头，可能是键盘密码，即CTF<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/3.png" alt="图片">  </p><h1 id="3-SWPU2019-Network"><a href="#3-SWPU2019-Network" class="headerlink" title="3.[SWPU2019]Network"></a>3.[SWPU2019]Network</h1><p>和之前tti隐写的题类似，一个txt文件里面只有四个数字：64,127,191,255</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">63  00111111</span><br><span class="line">127 01111111</span><br><span class="line">191 10111111</span><br><span class="line">255 11111111</span><br></pre></td></tr></table></figure><p>每一个ttl只有前两位隐藏数字，四个为一组</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import binascii</span><br><span class="line">with open(&#39;attachment.txt&#39;,&#39;r&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.readlines()</span><br><span class="line">    p&#x3D;[]</span><br><span class="line">    for x in range(len(a)):</span><br><span class="line">       p.append(int(a[x])) </span><br><span class="line">    s&#x3D;&#39;&#39;</span><br><span class="line">    for i in p:</span><br><span class="line">        if(i&#x3D;&#x3D;63):</span><br><span class="line">            b&#x3D;&#39;00&#39;</span><br><span class="line">        elif(i&#x3D;&#x3D;127):</span><br><span class="line">            b&#x3D;&#39;01&#39;</span><br><span class="line">        elif(i&#x3D;&#x3D;191):</span><br><span class="line">            b&#x3D;&#39;10&#39;</span><br><span class="line">        else:</span><br><span class="line">            b&#x3D;&#39;11&#39;</span><br><span class="line">        s +&#x3D;b</span><br><span class="line"># print(s)</span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">for i in range(0,len(s),8):</span><br><span class="line">    flag +&#x3D; chr(int(s[i:i+8],2))</span><br><span class="line">flag &#x3D; binascii.unhexlify(flag)</span><br><span class="line">wp &#x3D; open(&#39;ans.zip&#39;,&#39;wb&#39;)</span><br><span class="line">wp.write(flag)</span><br><span class="line">wp.close()</span><br></pre></td></tr></table></figure><p>跑完脚本，会出现一个压缩包，是伪加密。<br>打开里面的flag.txt很明显是base64编码，解码得到flag。</p><h1 id="4-ACTF新生赛2020-outguess"><a href="#4-ACTF新生赛2020-outguess" class="headerlink" title="4.[ACTF新生赛2020]outguess"></a>4.[ACTF新生赛2020]outguess</h1><p>outguess的隐写，jpg属性备注发现社会主义核心价值观加密，解密得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">abc</span><br></pre></td></tr></table></figure><p>在linux下得到flag  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">outguess -k &quot;abc&quot; -r mmm.jpg flag.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/4.png" alt="图片"> </p><h1 id="5-MRCTF2020-ezmisc"><a href="#5-MRCTF2020-ezmisc" class="headerlink" title="5.[MRCTF2020]ezmisc"></a>5.[MRCTF2020]ezmisc</h1><p>修改图片高度即可得到flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/5.png" alt="图片"> </p><h1 id="6-我吃三明治"><a href="#6-我吃三明治" class="headerlink" title="6.我吃三明治"></a>6.我吃三明治</h1><p>用strings查看图片的字符，会出现一串英文,再用base32解码出flag。  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strings flag.jpg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/6.png" alt="图片"> </p><h1 id="7-GUET-CTF2019-虚假的压缩包"><a href="#7-GUET-CTF2019-虚假的压缩包" class="headerlink" title="7.[GUET-CTF2019]虚假的压缩包"></a>7.[GUET-CTF2019]虚假的压缩包</h1><p>两个压缩包，一个是虚假的压缩包，一个是真实的压缩包<br>虚假的压缩包是伪加密，打开里面的txt文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数学题</span><br><span class="line">n &#x3D; 33</span><br><span class="line">e &#x3D; 3</span><br><span class="line">解26</span><br><span class="line"></span><br><span class="line">-------------------------</span><br><span class="line">答案是</span><br></pre></td></tr></table></figure><p>一看是简单的rsa，写个脚本。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">p &#x3D; 3</span><br><span class="line">q &#x3D; 11</span><br><span class="line">e &#x3D; 0x3</span><br><span class="line">c &#x3D; 26</span><br><span class="line">n &#x3D; 33</span><br><span class="line">s &#x3D; (p- 1) * (q - 1)</span><br><span class="line">d &#x3D; gmpy2.invert(e,s)</span><br><span class="line">m &#x3D; pow(c,d,n)</span><br><span class="line"></span><br><span class="line">print pow(c, d, n)</span><br></pre></td></tr></table></figure><p>运行结果为5，压缩包密码：答案是5。<br>打开真实的压缩包里面有一个图片，和一个文件，将图片修改高度，图片提示和5异或：<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/7.png" alt="图片"> </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with open(&quot;亦真亦假&quot;,&quot;r&quot;) as fp:</span><br><span class="line">    r&#x3D;fp.read()</span><br><span class="line">    with open(&quot;xor.txt&quot;,&quot;w&quot;) as fp1:</span><br><span class="line">        for i in r:</span><br><span class="line">            tmp&#x3D;int(i,16)^5</span><br><span class="line">            fp1.write(hex(tmp)[2:])</span><br></pre></td></tr></table></figure><p>得到一个504B开头的数据，放在winhex中转ascii,得到一个压缩包，打开发现是word的类型，将后缀zip改成doc。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/8.png" alt="图片"><br>打开没发现flag字样，却有隐藏文字<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/9.png" alt="图片"><br>全选然后将颜色转换为黑色出flag<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/10.png" alt="图片">  </p><h1 id="8-安洵杯-2019-Attack"><a href="#8-安洵杯-2019-Attack" class="headerlink" title="8.[安洵杯 2019]Attack"></a>8.[安洵杯 2019]Attack</h1><p>先将流量包foremost,得到一个压缩包，打开有hint:这可是administrator的秘密，怎么能随便给人看呢？<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/11.png" alt="图片"><br>将流量包用wireshark打开，导出http中的lsass.dmp文件<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/12.png" alt="图片"><br>为什么导出这个文件呢？<br>百度：lsass.exe是一个系统进程，用于微软Windows系统的安全机制。它用于本地安全和登陆策略。<br>用mimikatz工具获取里面的系统administrator的密码<br>这是代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/13.png" alt="图片"><br>输入密码，解压之前foremost分离出的压缩包，得到flag。  </p><h1 id="9-RCTF2019-draw"><a href="#9-RCTF2019-draw" class="headerlink" title="9.[RCTF2019]draw"></a>9.[RCTF2019]draw</h1><p>logo语言，在网上找一个logo语言解释器跑一下就出结果。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/14.png" alt="图片"><br><a href="https://www.calormen.com/jslogo/" target="_blank" rel="noopener">https://www.calormen.com/jslogo/</a> （这个网站就可） </p><h1 id="10-粽子的来历"><a href="#10-粽子的来历" class="headerlink" title="10.粽子的来历"></a>10.粽子的来历</h1><p>打开是四个word文件,打不开，放在winhex下中间有一串奇怪的字符，都改成FF就可以正常打开。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/15.png" alt="图片"><br>打开后是几句诗，行间距不同。设1.5倍为1,1倍为0<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/16.png" alt="图片"><br>最后将其md5-32位加密即flag。  </p><h1 id="11-ACTF新生赛2020-NTFS数据流"><a href="#11-ACTF新生赛2020-NTFS数据流" class="headerlink" title="11.[ACTF新生赛2020]NTFS数据流"></a>11.[ACTF新生赛2020]NTFS数据流</h1><p>题目是NTFS数据流，将flag.zip解压缩，再用NtfsStreamsEditor2搜索得到flag.txt,导出得到flag。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/17.png" alt="图片">   </p><h1 id="12-百里挑一"><a href="#12-百里挑一" class="headerlink" title="12.百里挑一"></a>12.百里挑一</h1><p>将流量包放入wireshark中，导出http,100+张图片，先用kali的exiftool,找到了一半的flag。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exiftool *|grep flag</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/18.png" alt="图片"><br>另一半的flag在tcp 114流中<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/19.png" alt="图片"><br>最后拼在一起就是完整的flag。</p><h1 id="13-ACTF新生赛2020-swp"><a href="#13-ACTF新生赛2020-swp" class="headerlink" title="13.[ACTF新生赛2020]swp"></a>13.[ACTF新生赛2020]swp</h1><p>流量包在wireshark下http导出secret.zip，是个伪加密，将里面文件放在linux下，用vi查看。<br><img src="https://cdn.jsdelivr.net/gh/0xwindsky/img@1.0/buumisc1/20.png" alt="图片">  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/categories/buu/"/>
    
    
      <category term="buu" scheme="https://0xwindsky.github.io/tags/buu/"/>
    
      <category term="misc" scheme="https://0xwindsky.github.io/tags/misc/"/>
    
  </entry>
  
</feed>
